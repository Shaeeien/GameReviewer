@model Game
@using Microsoft.AspNetCore.Mvc;
@using System.Web;
@inject IHttpContextAccessor httpContextAccessor



<head>
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <script src="~/lib/bootstrap/dist/js/bootstrap.min.js"></script>
</head>

<h1>@Model.Name</h1>
@*Tutaj będą fotki*@

@using(ImageRepository repo = new ImageRepository()){
List<Image> images = repo.GetByGame(Model);

<div id="myCarousel" class="carousel slide" data-ride="carousel">
    <!-- Indicators -->
    <ol class="carousel-indicators">
        @for(int i = 0; i < images.Count; i++){
            if(i == 0){
                    <li data-target="#myCarousel" data-slide-to="@i" class="active"></li>
            }
            else{
                    <li data-target="#myCarousel" data-slide-to="@i"></li>
            }
        }                    
    </ol>

    <!-- Wrapper for slides -->
    <div class="carousel-inner">
        @for(int i = 0; i < images.Count; i++)
        {
            if (i == 0)
            {
                if (images[i].Data != null)
                {
                    <div class="item active">
                        <img src="data:image/jpeg;base64,@Convert.ToBase64String(images[i].Data)" alt=@images[i].Name />
                    </div>
                }
            }
            else
            {
                if (images[i].Data != null)
                {
                    <div class="item">
                        <img src="data:image/jpeg;base64,@Convert.ToBase64String(images[i].Data)" alt=@images[i].Name />
                    </div>
                }
            }
        }
    </div>
    <!-- Left and right controls -->
    <a class="left carousel-control" href="#myCarousel" data-slide="prev">
        <span class="glyphicon glyphicon-chevron-left"></span>
        <span class="sr-only">Previous</span>
    </a>
    <a class="right carousel-control" href="#myCarousel" data-slide="next">
        <span class="glyphicon glyphicon-chevron-right"></span>
        <span class="sr-only">Next</span>
    </a>
</div>
}
<div>Średni czas gry(w godzinach): @Model.AvgPlayTimeInHours</div>
<div>
    <textarea style="resize: none; width:500px; height:500px;" readonly>@Model.Description</textarea>
</div>
<br />
@if (httpContextAccessor != null)
{
    @if (httpContextAccessor.HttpContext != null)
        @if (httpContextAccessor.HttpContext.Session.GetString("Login") != null)
        {
            <p>Komentujesz, jako @httpContextAccessor.HttpContext.Session.GetString("Login")</p>
            <form asp-action="AddReview" asp-controller="User">
                <input type="hidden" name="user" value="@Context.Session.GetString("Login")" />
                <input type="hidden" name="game" value="@Model.Id" />
                <textarea name="reviewContent" style="resize: none; width:500px; height:500px;"></textarea>
                <select name="rating">
                    <option value="1.0">1.0</option>
                    <option value="1.5">1.5</option>
                    <option value="2.0">2.0</option>
                    <option value="2.5">2.5</option>
                    <option value="3.0">3.0</option>
                    <option value="3.5">3.5</option>
                    <option value="4.0">4.0</option>
                    <option value="4.5">4.5</option>
                    <option value="5.0" selected>5.0</option>
                </select>
                <button class="btn btn-primary" type="submit">Dodaj recenzję</button>
            </form>
        }
}
@*Tutaj będą wyświetlone komentarze już zamieszczone, zrobić seeding przykładowymi danymi
    UŻYWAĆ GIT CMD!
*@
<div>
    @using (UserRepository userRep = new UserRepository())
    @using (ReviewsRepository repo = new ReviewsRepository())
    {
        @foreach (Review review in repo.GetByGame(Model))
        {
            <div>
                Data: @review.CommentDate <br />
                @userRep.GetById(review.UserId).UserName napisał: <br />
                <div>
                    @review.ReviewContent
                </div>
                <div>
                    Ocena: @review.Rating
                </div>
                @foreach (ReviewResponse response in repo.GetResponses(review))
                {

                    @if (response.User != null)
                    {
                        <div>
                            @response.User.UserName odpowiedział:
                            @response.ResponseContent
                        </div>
                    }
                }
            </div>
        }
    }
</div>
