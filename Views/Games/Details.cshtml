@model Game
@using Microsoft.AspNetCore.Mvc;
@using System.Web;
@inject IHttpContextAccessor httpContextAccessor


<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <script src="~/lib/jquery/jquery.min.js"></script>
    <link href="~/lib/bootstrap/css/bootstrap.min.css" rel="stylesheet" />
    <script src="~/lib/bootstrap/js/bootstrap.min.js"></script>
</head>

<body>
    
    <h1>@Model.Name</h1>
    @*Tutaj będą fotki*@
    @using (ImageRepository repo = new ImageRepository())
    {
        List<Image> images = repo.GetByGame(Model);
        <div id="carouselExampleIndicators" class="carousel slide" data-bs-ride="true">
            <div class="carousel-indicators">
                @for (int i = 0; i < images.Count; i++)
                {
                    if(i ==  0){
                        <button type="button" data-bs-target="#carouselExampleIndicators" data-bs-slide-to="0" class="active" aria-current="true" aria-label="Slide 1"></button>
                    }
                    else{
                        <button type="button" data-bs-target="#carouselExampleIndicators" data-bs-slide-to="@i" aria-label="Slide @i+1"></button>
                    }
                }
            </div>
            <div class="carousel-inner">
                @for (int i = 0; i < images.Count; i++)
                {
                    if (i == 0)
                    {
                        <div class="carousel-item active">
                            <img class="d-block w-100" src="data:image/jpeg;base64,@Convert.ToBase64String(images[i].Data)" alt="" />
                        </div>
                    }
                    else
                    {
                        <div class="carousel-item">
                            <img id="@i" style="width:100%;" src="data:image/jpeg;base64,@Convert.ToBase64String(images[i].Data)" alt="" />
                        </div>
                    }
                }
            </div>
            <button class="carousel-control-prev" type="button" data-bs-target="#carouselExampleIndicators" data-bs-slide="prev">
                <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                <span class="visually-hidden">Previous</span>
            </button>
            <button class="carousel-control-next" type="button" data-bs-target="#carouselExampleIndicators" data-bs-slide="next">
                <span class="carousel-control-next-icon" aria-hidden="true"></span>
                <span class="visually-hidden">Next</span>
            </button>
        </div>          
    }
    
    <br />

    <div>Średni czas gry(w godzinach): @Model.AvgPlayTimeInHours</div>
    <div>
        <textarea style="resize: none; width:500px; height:500px;" readonly>@Model.Description</textarea>
    </div>
    <br />
    @if (httpContextAccessor != null)
    {
        @if (httpContextAccessor.HttpContext != null)
            @if (httpContextAccessor.HttpContext.Session.GetString("Login") != null)
            {
                <p>Komentujesz, jako @httpContextAccessor.HttpContext.Session.GetString("Login")</p>
                <form asp-action="AddReview" asp-controller="User">
                    <input type="hidden" name="user" value="@Context.Session.GetString("Login")" />
                    <input type="hidden" name="game" value="@Model.Id" />
                    <textarea name="reviewContent" style="resize: none; width:500px; height:500px;"></textarea>
                    <select name="rating">
                        <option value="1.0">1.0</option>
                        <option value="1.5">1.5</option>
                        <option value="2.0">2.0</option>
                        <option value="2.5">2.5</option>
                        <option value="3.0">3.0</option>
                        <option value="3.5">3.5</option>
                        <option value="4.0">4.0</option>
                        <option value="4.5">4.5</option>
                        <option value="5.0" selected>5.0</option>
                    </select>
                    <button class="btn btn-primary" type="submit">Dodaj recenzję</button>
                </form>
            }
    }
    @*Tutaj będą wyświetlone komentarze już zamieszczone, zrobić seeding przykładowymi danymi
        UŻYWAĆ GIT CMD!
    *@
    <div>
        @using (UserRepository userRep = new UserRepository())
        @using (ReviewsRepository repo = new ReviewsRepository())
        {
            @foreach (Review review in repo.GetByGame(Model))
            {
                <div>
                    Data: @review.CommentDate <br />
                    @userRep.GetById(review.UserId).UserName napisał: <br />
                    <div>
                        @review.ReviewContent
                    </div>
                    <div>
                        Ocena: @review.Rating
                    </div>
                    @foreach (ReviewResponse response in repo.GetResponses(review))
                    {

                        @if (response.User != null)
                        {
                            <div>
                                @response.User.UserName odpowiedział:
                                @response.ResponseContent
                            </div>
                        }
                    }
                </div>
            }
        }
    </div>
</body>